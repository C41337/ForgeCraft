using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SMP
{
	/// <summary>
	/// Handles chunk lighting.
	/// </summary>
	public partial class Chunk
	{
		public void RecalculateLight(int x, int z)
		{
			sbyte curLight = 0xf; byte block;
			for (int y = Chunk.Height - 1; y >= 0; y--)
			{
				block = blocks[Chunk.PosToInt(x, y, z)];
				curLight -= LightOpacity[block];
				if (curLight <= 0) break;
				SetSkyLight(x, y, z, (byte)curLight);
			}
		}

		public void RecalculateLight()
		{
			for (int x = 0; x < Chunk.Width; x++)
			{
				for (int z = 0; z < Chunk.Depth; z++)
				{
					RecalculateLight(x, z);
				}
			}
		}


		private static sbyte[] LightOpacity = new sbyte[] {
            0x0, 0xf, 0xf, 0xf, 0xf, 0xf, 0x0, 0xf, 0x3, 0x3, 0x0, 0x0, 0xf, 0xf, 0xf, 0xf,
            0xf, 0xf, 0x1, 0xf, 0x0, 0xf, 0xf, 0xf, 0xf, 0xf, 0x0, 0x0, 0x0, 0x0, 0xf, 0x0,
            0x0, 0x0, 0x0, 0xf, 0xf, 0xf, 0xf, 0xf, 0xf, 0xf, 0xf, 0xf, 0x0, 0x0, 0xf, 0xf,
            0xf, 0x0, 0xf, 0xf, 0xf, 0x0, 0xf, 0xf, 0xf, 0x0, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0,
            0x0, 0x0, 0x0, 0xf, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xf, 0xf, 0x0, 0xf, 0x0,
            0xf, 0xf, 0xf, 0xf, 0x0, 0xf, 0x0, 0x0, 0x0, 0xf
        };
	}
}
